public static native int COLOR_PAIR(int n);
public static native void _nc_free_and_exit(int);
public static native void _nc_freeall(void);
public static native void _tracedump(const char *label, WINDOW *win);
public static native void _tracef(const char *format, ...);
public static native int add_wch( const cchar_t *wch );
public static native int add_wchnstr(const cchar_t *wchstr, int n);
public static native int add_wchstr(const cchar_t *wchstr);
public static native int addch(const chtype ch);
public static native int addchnstr(const chtype *chstr, int n);
public static native int addchstr(const chtype *chstr);
public static native int addnstr(const char *str, int n);
public static native int addnwstr(const wchar_t *wstr, int n);
public static native int addstr(const char *str);
public static native int addwstr(const wchar_t *wstr);
public static native int alloc_pair(int fg, int bg);
public static native int assume_default_colors(int fg, int bg);
public static native int attr_get(attr_t *attrs, short *pair, void *opts);
public static native int attr_off(attr_t attrs, void *opts);
public static native int attr_on(attr_t attrs, void *opts);
public static native int attr_set(attr_t attrs, short pair, void *opts);
public static native int attroff(int attrs);
public static native int attron(int attrs);
public static native int attrset(int attrs);
public static native int baudrate(void);
public static native int beep(void);
public static native int bkgd(chtype ch);
public static native void bkgdset(chtype ch);
public static native int bkgrnd( const cchar_t *wch);
public static native void bkgrndset(const cchar_t *wch );
public static native int border(chtype ls, chtype rs, chtype ts, chtype bs,
public static native int border_set(
public static native int box(WINDOW *win, chtype verch, chtype horch);
public static native int box_set(
public static native bool can_change_color(void);
public static native int cbreak(void);
public static native int chgat(int n, attr_t attr, short pair, const void *opts);
public static native int clear(void);
public static native int clearok(WINDOW *win, bool bf);
public static native int clrtobot(void);
public static native int clrtoeol(void);
public static native int color_content(short color, short *r, short *g, short *b);
public static native int color_set(short pair, void* opts);
public static native int copywin(const WINDOW *srcwin, WINDOW *dstwin, int sminrow,
public static native int curs_set(int visibility);
public static native int def_prog_mode(void);
public static native int def_shell_mode(void);
public static native int define_key(const char *definition, int keycode);
public static native int del_curterm(TERMINAL *oterm);
public static native int delay_output(int ms);
public static native int delch(void);
public static native int deleteln(void);
public static native void delscreen(SCREEN* sp);
public static native int delwin(WINDOW *win);
public static native int doupdate(void);
public static native int echo(void);
public static native int echo_wchar( const cchar_t *wch );
public static native int echochar(const chtype ch);
public static native int endwin(void);
public static native int erase(void);
public static native char erasechar(void);
public static native int erasewchar(wchar_t *ch);
public static native int extended_color_content(int color, int *r, int *g, int *b);
public static native int extended_pair_content(int pair, int *f, int *b);
public static native int extended_slk_color(int pair);
public static native void filter(void);
public static native int find_pair(int fg, int bg);
public static native int flash(void);
public static native int flushinp(void);
public static native int free_pair(int pair);
public static native int get_wch(wint_t *wch);
public static native int get_wstr(wint_t *wstr);
public static native int getbegx(WINDOW *win);
public static native int getbegy(WINDOW *win);
public static native void getbegyx(WINDOW *win, int y, int x);
public static native chtype getbkgd(WINDOW *win);
public static native int getbkgrnd(cchar_t *wch);
public static native int getcchar(
public static native int getch(void);
public static native int getcurx(WINDOW *win);
public static native int getcury(WINDOW *win);
public static native int getmaxx(WINDOW *win);
public static native int getmaxy(WINDOW *win);
public static native void getmaxyx(WINDOW *win, int y, int x);
public static native int getmouse(MEVENT *event);
public static native int getn_wstr(wint_t *wstr, int n);
public static native int getnstr(char *str, int n);
public static native int getparx(WINDOW *win);
public static native int getpary(WINDOW *win);
public static native void getparyx(WINDOW *win, int y, int x);
public static native int getstr(char *str);
public static native void getsyx(int y, int x);
public static native void getyx(WINDOW *win, int y, int x);
public static native int halfdelay(int tenths);
public static native bool has_colors(void);
public static native bool has_ic(void);
public static native bool has_il(void);
public static native int has_key(int ch);
public static native int hline(chtype ch, int n);
public static native int hline_set(
public static native void idcok(WINDOW *win, bool bf);
public static native int idlok(WINDOW *win, bool bf);
public static native void immedok(WINDOW *win, bool bf);
public static native int in_wch(cchar_t *wcval);
public static native int in_wchnstr(cchar_t *wchstr, int n);
public static native int in_wchstr(cchar_t *wchstr);
public static native chtype inch(void);
public static native int inchnstr(chtype *chstr, int n);
public static native int inchstr(chtype *chstr);
public static native int init_color(short color, short r, short g, short b);
public static native int init_extended_color(int color, int r, int g, int b);
public static native int init_extended_pair(int pair, int f, int b);
public static native int init_pair(short pair, short f, short b);
public static native int innstr(char *str, int n);
public static native int innwstr(wchar_t *wstr, int n);
public static native int ins_nwstr(const wchar_t *wstr, int n);
public static native int ins_wch(const cchar_t *wch);
public static native int ins_wstr(const wchar_t *wstr);
public static native int insch(chtype ch);
public static native int insdelln(int n);
public static native int insertln(void);
public static native int insnstr(const char *str, int n);
public static native int insstr(const char *str);
public static native int instr(char *str);
public static native int intrflush(WINDOW *win, bool bf);
public static native int inwstr(wchar_t *wstr);
public static native bool is_cleared(const WINDOW *win);
public static native bool is_idcok(const WINDOW *win);
public static native bool is_idlok(const WINDOW *win);
public static native bool is_immedok(const WINDOW *win);
public static native bool is_keypad(const WINDOW *win);
public static native bool is_leaveok(const WINDOW *win);
public static native bool is_linetouched(WINDOW *win, int line);
public static native bool is_nodelay(const WINDOW *win);
public static native bool is_notimeout(const WINDOW *win);
public static native bool is_pad(const WINDOW *win);
public static native bool is_scrollok(const WINDOW *win);
public static native bool is_subwin(const WINDOW *win);
public static native bool is_syncok(const WINDOW *win);
public static native bool is_term_resized(int lines, int columns);
public static native bool is_wintouched(WINDOW *win);
public static native bool isendwin(void);
public static native int key_defined(const char *definition);
public static native int keyok(int keycode, bool enable);
public static native int keypad(WINDOW *win, bool bf);
public static native char killchar(void);
public static native int killwchar(wchar_t *ch);
public static native int leaveok(WINDOW *win, bool bf);
public static native int mcprint(char *data, int len);
public static native int meta(WINDOW *win, bool bf);
public static native bool mouse_trafo(int* pY, int* pX, bool to_screen);
public static native int mouseinterval(int erval);
public static native mmask_t mousemask(mmask_t newmask, mmask_t *oldmask);
public static native int move(int y, int x);
public static native int mvadd_wch( int y, int x, const cchar_t *wch );
public static native int mvadd_wchnstr(int y, int x, const cchar_t *wchstr, int n);
public static native int mvadd_wchstr(int y, int x, const cchar_t *wchstr);
public static native int mvaddch(int y, int x, const chtype ch);
public static native int mvaddchnstr(int y, int x, const chtype *chstr, int n);
public static native int mvaddchstr(int y, int x, const chtype *chstr);
public static native int mvaddnstr(int y, int x, const char *str, int n);
public static native int mvaddnwstr(int y, int x, const wchar_t *wstr, int n);
public static native int mvaddstr(int y, int x, const char *str);
public static native int mvaddwstr(int y, int x, const wchar_t *wstr);
public static native int mvchgat(int y, int x,
public static native int mvcur(int oldrow, int oldcol, int newrow, int newcol);
public static native int mvdelch(int y, int x);
public static native int mvderwin(WINDOW *win, int par_y, int par_x);
public static native int mvget_wch(int y, int x, wint_t *wch);
public static native int mvget_wstr(int y, int x, wint_t *wstr);
public static native int mvgetch(int y, int x);
public static native int mvgetn_wstr(int y, int x, wint_t *wstr, int n);
public static native int mvgetnstr(int y, int x, char *str, int n);
public static native int mvgetstr(int y, int x, char *str);
public static native int mvhline(int y, int x, chtype ch, int n);
public static native int mvhline_set(
public static native int mvin_wch(int y, int x, cchar_t *wcval);
public static native int mvin_wchnstr(int y, int x, cchar_t *wchstr, int n);
public static native int mvin_wchstr(int y, int x, cchar_t *wchstr);
public static native chtype mvinch(int y, int x);
public static native int mvinchnstr(int y, int x, chtype *chstr, int n);
public static native int mvinchstr(int y, int x, chtype *chstr);
public static native int mvinnstr(int y, int x, char *str, int n);
public static native int mvinnwstr(int y, int x, wchar_t *wstr, int n);
public static native int mvins_nwstr(int y, int x, const wchar_t *wstr, int n);
public static native int mvins_wch(int y, int x, const cchar_t *wch);
public static native int mvins_wstr(int y, int x, const wchar_t *wstr);
public static native int mvinsch(int y, int x, chtype ch);
public static native int mvinsnstr(int y, int x, const char *str, int n);
public static native int mvinsstr(int y, int x, const char *str);
public static native int mvinstr(int y, int x, char *str);
public static native int mvinwstr(int y, int x, wchar_t *wstr);
public static native int mvprintw(int y, int x, const char *fmt, ...);
public static native int mvscanw(int y, int x, char *fmt, ...);
public static native int mvvline(int y, int x, chtype ch, int n);
public static native int mvvline_set(
public static native int mvwadd_wch( WINDOW *win, int y, int x, const cchar_t *wch );
public static native int mvwadd_wchnstr(WINDOW *win, int y, int x, const cchar_t *wchstr, int n);
public static native int mvwadd_wchstr(WINDOW *win, int y, int x, const cchar_t *wchstr);
public static native int mvwaddch(WINDOW *win, int y, int x, const chtype ch);
public static native int mvwaddchnstr(WINDOW *win, int y, int x, const chtype *chstr, int n);
public static native int mvwaddchstr(WINDOW *win, int y, int x, const chtype *chstr);
public static native int mvwaddnstr(WINDOW *win, int y, int x, const char *str, int n);
public static native int mvwaddnwstr(WINDOW *win, int y, int x, const wchar_t *wstr, int n);
public static native int mvwaddstr(WINDOW *win, int y, int x, const char *str);
public static native int mvwaddwstr(WINDOW *win, int y, int x, const wchar_t *wstr);
public static native int mvwchgat(WINDOW *win, int y, int x,
public static native int mvwdelch(WINDOW *win, int y, int x);
public static native int mvwget_wch(WINDOW *win, int y, int x, wint_t *wch);
public static native int mvwget_wstr(WINDOW *win, int y, int x, wint_t *wstr);
public static native int mvwgetch(WINDOW *win, int y, int x);
public static native int mvwgetn_wstr(WINDOW *win, int y, int x, wint_t *wstr, int n);
public static native int mvwgetnstr(WINDOW *, int y, int x, char *str, int n);
public static native int mvwgetstr(WINDOW *win, int y, int x, char *str);
public static native int mvwhline(WINDOW *, int y, int x, chtype ch, int n);
public static native int mvwhline_set(
public static native int mvwin(WINDOW *win, int y, int x);
public static native int mvwin_wch(WINDOW *win, int y, int x, cchar_t *wcval);
public static native int mvwin_wchnstr(WINDOW *win, int y, int x, cchar_t *wchstr, int n);
public static native int mvwin_wchstr(WINDOW *win, int y, int x, cchar_t *wchstr);
public static native chtype mvwinch(WINDOW *win, int y, int x);
public static native int mvwinchnstr(WINDOW *win, int y, int x, chtype *chstr, int n);
public static native int mvwinchstr(WINDOW *win, int y, int x, chtype *chstr);
public static native int mvwinnstr(WINDOW *win, int y, int x, char *str, int n);
public static native int mvwinnwstr(WINDOW *win, int y, int x, wchar_t *wstr, int n);
public static native int mvwins_nwstr(WINDOW *win, int y, int x, const wchar_t *wstr, int n);
public static native int mvwins_wch(WINDOW *win, int y, int x, const cchar_t *wch);
public static native int mvwins_wstr(WINDOW *win, int y, int x, const wchar_t *wstr);
public static native int mvwinsch(WINDOW *win, int y, int x, chtype ch);
public static native int mvwinsnstr(WINDOW *win, int y, int x, const char *str, int n);
public static native int mvwinsstr(WINDOW *win, int y, int x, const char *str);
public static native int mvwinstr(WINDOW *win, int y, int x, char *str);
public static native int mvwinwstr(WINDOW *win, int y, int x, wchar_t *wstr);
public static native int mvwprintw(WINDOW *win, int y, int x, const char *fmt, ...);
public static native int mvwscanw(WINDOW *win, int y, int x, char *fmt, ...);
public static native int mvwvline(WINDOW *, int y, int x, chtype ch, int n);
public static native int mvwvline_set(
public static native int napms(int ms);
public static native int nl(void);
public static native int nocbreak(void);
public static native int nodelay(WINDOW *win, bool bf);
public static native int noecho(void);
public static native void nofilter(void);
public static native int nonl(void);
public static native void noqiflush(void);
public static native int noraw(void);
public static native int notimeout(WINDOW *win, bool bf);
public static native int overlay(const WINDOW *srcwin, WINDOW *dstwin);
public static native int overwrite(const WINDOW *srcwin, WINDOW *dstwin);
public static native int pair_content(short pair, short *f, short *b);
public static native int pechochar(WINDOW *pad, chtype ch);
public static native int pnoutrefresh(WINDOW *pad, int pminrow, int pmincol,
public static native int prefresh(WINDOW *pad, int pminrow, int pmincol,
public static native int printw(const char *fmt, ...);
public static native int putp(const char *str);
public static native int putwin(WINDOW *win, FILE *filep);
public static native void qiflush(void);
public static native int raw(void);
public static native int redrawwin(WINDOW *win);
public static native int refresh(void);
public static native int reset_prog_mode(void);
public static native int reset_shell_mode(void);
public static native int resetty(void);
public static native int resize_term(int lines, int columns);
public static native int resizeterm(int lines, int columns);
public static native int restartterm(const char *term, int filedes, int *errret);
public static native int ripoffline(int line, int (*init)(WINDOW *, int));
public static native int savetty(void);
public static native int scanw(char *fmt, ...);
public static native int scr_dump(const char *filename);
public static native int scr_init(const char *filename);
public static native int scr_restore(const char *filename);
public static native int scr_set(const char *filename);
public static native int scrl(int n);
public static native int scroll(WINDOW *win);
public static native int scrollok(WINDOW *win, bool bf);
public static native int setcchar(
public static native int setscrreg(int top, int bot);
public static native void setsyx(int y, int x);
public static native int setterm(const char *term);
public static native int setupterm(const char *term, int filedes, int *errret);
public static native attr_t slk_attr(void);
public static native int slk_attr_off(const attr_t attrs, void * opts);
public static native int slk_attr_on(attr_t attrs, void* opts);
public static native int slk_attr_set(const attr_t attrs, short pair, void* opts);
public static native int slk_attroff(const chtype attrs);
public static native int slk_attron(const chtype attrs);
public static native int slk_attrset(const chtype attrs);
public static native int slk_clear(void);
public static native int slk_color(short pair);
public static native int slk_init(int fmt);
public static native int slk_noutrefresh(void);
public static native int slk_refresh(void);
public static native int slk_restore(void);
public static native int slk_set(int labnum, const char *label, int fmt);
public static native int slk_touch(void);
public static native int standend(void);
public static native int standout(void);
public static native int start_color(void);
public static native int syncok(WINDOW *win, bool bf);
public static native attr_t term_attrs(void);
public static native chtype termattrs(void);
public static native int tgetent(char *bp, const char *name);
public static native int tgetflag(char *id);
public static native int tgetnum(char *id);
public static native int tigetflag(const char *capname);
public static native int tigetnum(const char *capname);
public static native void timeout(int delay);
public static native int touchline(WINDOW *win, int start, int count);
public static native int touchwin(WINDOW *win);
public static native int tputs(const char *str, int affcnt, int (*putc)(int));
public static native int tputs(const char *str, int affcnt, int (*putc)(int));
public static native void trace(const unsigned int param);
public static native int typeahead(int fd);
public static native int unget_wch(const wchar_t wch);
public static native int ungetch(int ch);
public static native int ungetmouse(MEVENT *event);
public static native int untouchwin(WINDOW *win);
public static native int use_default_colors(void);
public static native void use_env(bool f);
public static native int use_extended_names(bool enable);
public static native int use_legacy_coding(int level);
public static native void use_tioctl(bool f);
public static native int vid_attr(attr_t attrs, short pair, void *opts);
public static native int vid_puts(attr_t attrs, short pair, void *opts, int (*putc)(int));
public static native int vidattr(chtype attrs);
public static native int vidputs(chtype attrs, int (*putc)(int));
public static native int vline(chtype ch, int n);
public static native int vline_set(
public static native int vw_printw(WINDOW *win, const char *fmt, va_list varglist);
public static native int vw_scanw(WINDOW *win, char *fmt, va_list varglist);
public static native int vwprintw(WINDOW *win, const char *fmt, va_list varglist);
public static native int vwscanw(WINDOW *win, char *fmt, va_list varglist);
public static native int wadd_wch( WINDOW *win, const cchar_t *wch );
public static native int wadd_wchnstr(WINDOW * win, const cchar_t *wchstr, int n);
public static native int wadd_wchstr(WINDOW * win, const cchar_t *wchstr);
public static native int waddch(WINDOW *win, const chtype ch);
public static native int waddchnstr(WINDOW *win, const chtype *chstr, int n);
public static native int waddchstr(WINDOW *win, const chtype *chstr);
public static native int waddnstr(WINDOW *win, const char *str, int n);
public static native int waddnwstr(WINDOW *win, const wchar_t *wstr, int n);
public static native int waddstr(WINDOW *win, const char *str);
public static native int waddwstr(WINDOW *win, const wchar_t *wstr);
public static native int wattr_get(WINDOW *win, attr_t *attrs, short *pair, void *opts);
public static native int wattr_off(WINDOW *win, attr_t attrs, void *opts);
public static native int wattr_on(WINDOW *win, attr_t attrs, void *opts);
public static native int wattr_set(WINDOW *win, attr_t attrs, short pair, void *opts);
public static native int wattroff(WINDOW *win, int attrs);
public static native int wattron(WINDOW *win, int attrs);
public static native int wattrset(WINDOW *win, int attrs);
public static native int wbkgd(WINDOW *win, chtype ch);
public static native void wbkgdset(WINDOW *win, chtype ch);
public static native int wbkgrnd( WINDOW *win, const cchar_t *wch);
public static native void wbkgrndset(WINDOW *win, const cchar_t *wch);
public static native int wborder(WINDOW *win, chtype ls, chtype rs,
public static native int wborder_set(
public static native int wchgat(WINDOW *win,
public static native int wclear(WINDOW *win);
public static native int wclrtobot(WINDOW *win);
public static native int wclrtoeol(WINDOW *win);
public static native int wcolor_set(WINDOW *win, short pair, void* opts);
public static native void wcursyncup(WINDOW *win);
public static native int wdelch(WINDOW *win);
public static native int wdeleteln(WINDOW *win);
public static native int wecho_wchar( WINDOW *win, const cchar_t *wch );
public static native int wechochar(WINDOW *win, const chtype ch);
public static native bool wenclose(const WINDOW *win, int y, int x);
public static native int werase(WINDOW *win);
public static native int wget_wch(WINDOW *win, wint_t *wch);
public static native int wget_wstr(WINDOW *win, wint_t *wstr);
public static native int wgetbkgrnd(WINDOW *win, cchar_t *wch);
public static native int wgetch(WINDOW *win);
public static native int wgetdelay(const WINDOW *win);
public static native int wgetn_wstr(WINDOW *win, wint_t *wstr, int n);
public static native int wgetnstr(WINDOW *win, char *str, int n);
public static native int wgetscrreg(const WINDOW *win, int *top, int *bottom);
public static native int wgetstr(WINDOW *win, char *str);
public static native int whline(WINDOW *win, chtype ch, int n);
public static native int whline_set(
public static native int win_wch(WINDOW *win, cchar_t *wcval);
public static native int win_wchnstr(WINDOW *win, cchar_t *wchstr, int n);
public static native int win_wchstr(WINDOW *win, cchar_t *wchstr);
public static native chtype winch(WINDOW *win);
public static native int winchnstr(WINDOW *win, chtype *chstr, int n);
public static native int winchstr(WINDOW *win, chtype *chstr);
public static native int winnstr(WINDOW *win, char *str, int n);
public static native int winnwstr(WINDOW *win, wchar_t *wstr, int n);
public static native int wins_nwstr(WINDOW *win, const wchar_t *wstr, int n);
public static native int wins_wch(WINDOW *win, const cchar_t *wch);
public static native int wins_wstr(WINDOW *win, const wchar_t *wstr);
public static native int winsch(WINDOW *win, chtype ch);
public static native int winsdelln(WINDOW *win, int n);
public static native int winsertln(WINDOW *win);
public static native int winsnstr(WINDOW *win, const char *str, int n);
public static native int winsstr(WINDOW *win, const char *str);
public static native int winstr(WINDOW *win, char *str);
public static native int winwstr(WINDOW *win, wchar_t *wstr);
public static native bool wmouse_trafo(const WINDOW* win, int* pY, int* pX,
public static native int wmove(WINDOW *win, int y, int x);
public static native int wnoutrefresh(WINDOW *win);
public static native int wprintw(WINDOW *win, const char *fmt, ...);
public static native int wredrawln(WINDOW *win, int beg_line, int num_lines);
public static native int wrefresh(WINDOW *win);
public static native int wresize(WINDOW *win, int lines, int columns);
public static native int wscanw(WINDOW *win, char *fmt, ...);
public static native int wscrl(WINDOW *win, int n);
public static native int wsetscrreg(WINDOW *win, int top, int bot);
public static native int wstandend(WINDOW *win);
public static native int wstandout(WINDOW *win);
public static native void wsyncdown(WINDOW *win);
public static native void wsyncup(WINDOW *win);
public static native void wtimeout(WINDOW *win, int delay);
public static native int wtouchln(WINDOW *win, int y, int n, int changed);
public static native int wvline(WINDOW *win, chtype ch, int n);
public static native int wvline_set(