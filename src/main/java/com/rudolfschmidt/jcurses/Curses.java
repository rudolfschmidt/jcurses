package com.rudolfschmidt.jcurses;

import com.rudolfschmidt.jcurses.callbacks.CursesInit;
import com.rudolfschmidt.jcurses.callbacks.CursesPutc;
import com.rudolfschmidt.jcurses.types.*;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.Pointer;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.ShortByReference;

public interface Curses extends Library {

	static Curses loadLibrary() {
		return Native.loadLibrary("ncursesw", Curses.class);
	}

	int COLOR_PAIR(int n);
	void _nc_free_and_exit(int n);
	void _nc_freeall();
	void _tracedump(String label, Window win);
	void _tracef(String format, Window win);
	int add_wch(CChar wch);
	int add_wchnstr(CChar wchstr, int n);
	int add_wchstr(CChar wchstr);
	int addch(CHType ch);
	int addchnstr(CHType chstr, int n);
	int addchstr(CHType chstr);
	int addnstr(String str, int n);
	int addnwstr(char[] wstr, int n);
	int addstr(String str);
	int addwstr(char[] wstr);
	int alloc_pair(int fg, int bg);
	int assume_default_colors(int fg, int bg);
	int attr_get(Attribute attrs, ShortByReference pair, Pointer opts);
	int attr_off(Attribute attrs, Pointer opts);
	int attr_on(Attribute attrs, Pointer opts);
	int attr_set(Attribute attrs, short pair, Pointer opts);
	int attroff(int attrs);
	int attron(int attrs);
	int attrset(int attrs);
	int baudrate();
	int beep();
	int bkgd(CHType ch);
	void bkgdset(CHType ch);
	int bkgrnd(CChar wch);
	void bkgrndset(CChar wch);
	int border(CHType ls, CHType rs, CHType ts, CHType bs, CHType tl, CHType tr, CHType bl, CHType br);
	int border_set(CChar ls, CChar rs, CChar ts, CChar bs, CChar tl, CChar tr, CChar bl, CChar br);
	int box(Window win, CHType verch, CHType horch);
	int box_set(Window win, CChar verch, CChar horch);
	boolean can_change_color();
	int cbreak();
	int chgat(int n, Attribute attr, short pair, Pointer opts);
	int clear();
	int clearok(Window win, boolean bf);
	int clrtobot();
	int clrtoeol();
	int color_content(short color, ShortByReference r, ShortByReference g, ShortByReference b);
	int color_set(short pair, Pointer opts);
	int copywin(Window srcwin, Window dstwin, int sminrow, int smincol, int dminrow, int dmincol, int dmaxrow, int dmaxcol, int overlay);
	int curs_set(int visibility);
	int def_prog_mode();
	int def_shell_mode();
	int define_key(String definition, int keycode);
	int del_curterm(Terminal oterm);
	int delay_output(int ms);
	int delch();
	int deleteln();
	void delscreen(Screen sp);
	int delwin(Window win);
	int doupdate();
	int echo();
	int echo_wchar(CChar wch);
	int echochar(CHType ch);
	int endwin();
	int erase();
	char erasechar();
	int erasewchar(char[] ch);
	int extended_color_content(int color, IntByReference r, IntByReference g, IntByReference b);
	int extended_pair_content(int pair, IntByReference f, IntByReference b);
	int extended_slk_color(int pair);
	void filter();
	int find_pair(int fg, int bg);
	int flash();
	int flushinp();
	int free_pair(int pair);
	int get_wch(IntByReference wch);
	int get_wstr(IntByReference wstr);
	int getbegx(Window win);
	int getbegy(Window win);
	void getbegyx(Window win, int y, int x);
	CHType getbkgd(Window win);
	int getbkgrnd(CChar wch);
	int getcchar(CChar wcval, char[] wch, Attribute attrs, ShortByReference color_pair, Pointer opts);
	int getch();
	int getcurx(Window win);
	int getcury(Window win);
	int getmaxx(Window win);
	int getmaxy(Window win);
	void getmaxyx(Window win, int y, int x);
	int getmouse(Mevent event);
	int getn_wstr(IntByReference wstr, int n);
	int getnstr(String str, int n);
	int getparx(Window win);
	int getpary(Window win);
	void getparyx(Window win, int y, int x);
	int getstr(String str);
	void getsyx(int y, int x);
	void getyx(Pointer win, int y, int x);
	int halfdelay(int tenths);
	boolean has_colors();
	boolean has_ic();
	boolean has_il();
	int has_key(int ch);
	int hline(CHType ch, int n);
	int hline_set(CChar wch, int n);
	void idcok(Window win, boolean bf);
	int idlok(Window win, boolean bf);
	void immedok(Window win, boolean bf);
	int in_wch(CChar wcval);
	int in_wchnstr(CChar wchstr, int n);
	int in_wchstr(CChar wchstr);
	CHType inch();
	int inchnstr(CHType chstr, int n);
	int inchstr(CHType chstr);
	int init_color(short color, short r, short g, short b);
	int init_extended_color(int color, int r, int g, int b);
	int init_extended_pair(int pair, int f, int b);
	int init_pair(short pair, short f, short b);
	Window initscr();
	int innstr(String str, int n);
	int innwstr(char[] wstr, int n);
	int ins_nwstr(char[] wstr, int n);
	int ins_wch(CChar wch);
	int ins_wstr(char[] wstr);
	int insch(CHType ch);
	int insdelln(int n);
	int insertln();
	int insnstr(String str, int n);
	int insstr(String str);
	int instr(String str);
	int intrflush(Window win, boolean bf);
	int inwstr(char[] wstr);
	boolean is_cleared(Window win);
	boolean is_idcok(Window win);
	boolean is_idlok(Window win);
	boolean is_immedok(Window win);
	boolean is_keypad(Window win);
	boolean is_leaveok(Window win);
	boolean is_linetouched(Window win, int line);
	boolean is_nodelay(Window win);
	boolean is_notimeout(Window win);
	boolean is_pad(Window win);
	boolean is_scrollok(Window win);
	boolean is_subwin(Window win);
	boolean is_syncok(Window win);
	boolean is_term_resized(int lines, int columns);
	boolean is_wintouched(Window win);
	boolean isendwin();
	int key_defined(String definition);
	int keyok(int keycode, boolean enable);
	int keypad(Window win, boolean bf);
	char killchar();
	int killwchar(char[] ch);
	int leaveok(Window win, boolean bf);
	int mcprint(String data, int len);
	int meta(Window win, boolean bf);
	boolean mouse_trafo(IntByReference pY, IntByReference pX, boolean to_screen);
	int mouseinterval(int erval);
	MMask mousemask(MMask newmask, MMask oldmask);
	int move(int y, int x);
	int mvadd_wch(int y, int x, CChar wch);
	int mvadd_wchnstr(int y, int x, CChar wchstr, int n);
	int mvadd_wchstr(int y, int x, CChar wchstr);
	int mvaddch(int y, int x, CHType ch);
	int mvaddchnstr(int y, int x, CHType chstr, int n);
	int mvaddchstr(int y, int x, CHType chstr);
	int mvaddnstr(int y, int x, String str, int n);
	int mvaddnwstr(int y, int x, char[] wstr, int n);
	int mvaddstr(int y, int x, String str);
	int mvaddwstr(int y, int x, char[] wstr);
	int mvchgat(int y, int x, int n, Attribute attr, short pair, Pointer opts);
	int mvcur(int oldrow, int oldcol, int newrow, int newcol);
	int mvdelch(int y, int x);
	int mvderwin(Window win, int par_y, int par_x);
	int mvget_wch(int y, int x, IntByReference wch);
	int mvget_wstr(int y, int x, IntByReference wstr);
	int mvgetch(int y, int x);
	int mvgetn_wstr(int y, int x, IntByReference wstr, int n);
	int mvgetnstr(int y, int x, String str, int n);
	int mvgetstr(int y, int x, String str);
	int mvhline(int y, int x, CHType ch, int n);
	int mvhline_set(int y, int x, CChar wch, int n);
	int mvin_wch(int y, int x, CChar wcval);
	int mvin_wchnstr(int y, int x, CChar wchstr, int n);
	int mvin_wchstr(int y, int x, CChar wchstr);
	CHType mvinch(int y, int x);
	int mvinchnstr(int y, int x, CHType chstr, int n);
	int mvinchstr(int y, int x, CHType chstr);
	int mvinnstr(int y, int x, String str, int n);
	int mvinnwstr(int y, int x, char[] wstr, int n);
	int mvins_nwstr(int y, int x, char[] wstr, int n);
	int mvins_wch(int y, int x, CChar wch);
	int mvins_wstr(int y, int x, char[] wstr);
	int mvinsch(int y, int x, CHType ch);
	int mvinsnstr(int y, int x, String str, int n);
	int mvinsstr(int y, int x, String str);
	int mvinstr(int y, int x, String str);
	int mvinwstr(int y, int x, char[] wstr);
	int mvprintw(int y, int x, String fmt, Pointer... pointers);
	int mvscanw(int y, int x, String fmt, Pointer... pointers);
	int mvvline(int y, int x, CHType ch, int n);
	int mvvline_set(int y, int x, CChar wch, int n);
	int mvwadd_wch(Window win, int y, int x, CChar wch);
	int mvwadd_wchnstr(Window win, int y, int x, CChar wchstr, int n);
	int mvwadd_wchstr(Window win, int y, int x, CChar wchstr);
	int mvwaddch(Window win, int y, int x, CHType ch);
	int mvwaddchnstr(Window win, int y, int x, CHType chstr, int n);
	int mvwaddchstr(Window win, int y, int x, CHType chstr);
	int mvwaddnstr(Window win, int y, int x, String str, int n);
	int mvwaddnwstr(Window win, int y, int x, char[] wstr, int n);
	int mvwaddstr(Window win, int y, int x, String str);
	int mvwaddwstr(Window win, int y, int x, char[] wstr);
	int mvwchgat(Window win, int y, int x, int n, Attribute attr, short pair, Pointer opts);
	int mvwdelch(Window win, int y, int x);
	int mvwget_wch(Window win, int y, int x, IntByReference wch);
	int mvwget_wstr(Window win, int y, int x, IntByReference wstr);
	int mvwgetch(Window win, int y, int x);
	int mvwgetn_wstr(Window win, int y, int x, IntByReference wstr, int n);
	int mvwgetnstr(Window win, int y, int x, String str, int n);
	int mvwgetstr(Window win, int y, int x, String str);
	int mvwhline(Window win, int y, int x, CHType ch, int n);
	int mvwhline_set(Window win, int y, int x, CChar wch, int n);
	int mvwin(Window win, int y, int x);
	int mvwin_wch(Window win, int y, int x, CChar wcval);
	int mvwin_wchnstr(Window win, int y, int x, CChar wchstr, int n);
	int mvwin_wchstr(Window win, int y, int x, CChar wchstr);
	CHType mvwinch(Pointer win, int y, int x);
	int mvwinchnstr(Window win, int y, int x, CHType chstr, int n);
	int mvwinchstr(Window win, int y, int x, CHType chstr);
	int mvwinnstr(Window win, int y, int x, String str, int n);
	int mvwinnwstr(Window win, int y, int x, char[] wstr, int n);
	int mvwins_nwstr(Window win, int y, int x, char[] wstr, int n);
	int mvwins_wch(Window win, int y, int x, CChar wch);
	int mvwins_wstr(Window win, int y, int x, char[] wstr);
	int mvwinsch(Window win, int y, int x, CHType ch);
	int mvwinsnstr(Window win, int y, int x, String str, int n);
	int mvwinsstr(Window win, int y, int x, String str);
	int mvwinstr(Window win, int y, int x, String str);
	int mvwinwstr(Window win, int y, int x, char[] wstr);
	int mvwprintw(Pointer win, int y, int x, String fmt, Pointer... pointers);
	int mvwscanw(Pointer win, int y, int x, String fmt, Pointer... pointers);
	int mvwvline(Window win, int y, int x, CHType ch, int n);
	int mvwvline_set(Window win, int y, int x, CChar wch, int n);
	int napms(int ms);
	int nl();
	int nocbreak();
	int nodelay(Window win, boolean bf);
	int noecho();
	void nofilter();
	int nonl();
	void noqiflush();
	int noraw();
	int notimeout(Window win, boolean bf);
	int overlay(Window srcwin, Window dstwin);
	int overwrite(Window srcwin, Window dstwin);
	int pair_content(short pair, ShortByReference f, ShortByReference b);
	int pechochar(Pointer pad, CHType ch);
	int pnoutrefresh(Pointer pad, int pminrow, int pmincol, int sminrow, int smincol, int smaxrow, int smaxcol);
	int prefresh(Pointer pad, int pminrow, int pmincol, int sminrow, int smincol, int smaxrow, int smaxcol);
	int printw(String fmt, Pointer... pointers);
	int putp(String str);
	int putwin(Window win, Pointer filep);
	void qiflush();
	int raw();
	int redrawwin(Window win);
	int refresh();
	int reset_prog_mode();
	int reset_shell_mode();
	int resetty();
	int resize_term(int lines, int columns);
	int resizeterm(int lines, int columns);
	int restartterm(String term, int filedes, IntByReference errret);
	int ripoffline(int line, CursesInit fn);
	int savetty();
	int scanw(String fmt, Pointer... pointers);
	int scr_dump(String filename);
	int scr_init(String filename);
	int scr_restore(String filename);
	int scr_set(String filename);
	int scrl(int n);
	int scroll(Window win);
	int scrollok(Window win, boolean bf);
	int setcchar(CChar wcval, char[] wch, Attribute attrs, short color_pair, Pointer opts);
	int setscrreg(int top, int bot);
	void setsyx(int y, int x);
	int setterm(String term);
	int setupterm(String term, int filedes, IntByReference errret);
	Attribute slk_attr();
	int slk_attr_off(Attribute attrs, Pointer opts);
	int slk_attr_on(Attribute attrs, Pointer opts);
	int slk_attr_set(Attribute attrs, short pair, Pointer opts);
	int slk_attroff(CHType attrs);
	int slk_attron(CHType attrs);
	int slk_attrset(CHType attrs);
	int slk_clear();
	int slk_color(short pair);
	int slk_init(int fmt);
	int slk_noutrefresh();
	int slk_refresh();
	int slk_restore();
	int slk_set(int labnum, String label, int fmt);
	int slk_touch();
	int standend();
	int standout();
	int start_color();
	int syncok(Window win, boolean bf);
	Attribute term_attrs();
	CHType termattrs();
	int tgetent(String bp, String name);
	int tgetflag(String id);
	int tgetnum(String id);
	int tigetflag(String capname);
	int tigetnum(String capname);
	void timeout(int delay);
	int touchline(Window win, int start, int count);
	int touchwin(Window win);
	int tputs(String str, int affcnt, CursesPutc fn);
	void trace(int param);
	int typeahead(int fd);
	int unget_wch(char wch);
	int ungetch(int ch);
	int ungetmouse(Mevent event);
	int unctouchwin(Window win);
	int use_default_colors();
	void use_env(boolean f);
	int use_extended_names(boolean enable);
	int use_legacy_coding(int level);
	void use_tioctl(boolean f);
	int vid_attr(Attribute attrs, short pair, Pointer opts);
	//	int vid_puts(attr_t attrs, short pair, Pointer opts, int (*putc)(int));
	int vidattr(CHType attrs);
	//	int vidputs(chtype attrs, int (*putc)(int));
	int vline(CHType ch, int n);
	int vline_set(CChar wch, int n);
	int vw_printw(Window win, String fmt, Pointer varglist);
	int vw_scanw(Window win, String fmt, Pointer varglist);
	int vwprintw(Window win, String fmt, Pointer varglist);
	int vwscanw(Window win, String fmt, Pointer varglist);
	int wadd_wch(Window win, CChar wch);
	int wadd_wchnstr(Window win, CChar wchstr, int n);
	int wadd_wchstr(Window win, CChar wchstr);
	int waddch(Window win, CHType ch);
	int waddchnstr(Window win, CHType chstr, int n);
	int waddchstr(Window win, CHType chstr);
	int waddnstr(Window win, String str, int n);
	int waddnwstr(Window win, char[] wstr, int n);
	int waddstr(Window win, String str);
	int waddwstr(Window win, char[] wstr);
	int wattr_get(Window win, Attribute attrs, ShortByReference pair, Pointer opts);
	int wattr_off(Window win, Attribute attrs, Pointer opts);
	int wattr_on(Window win, Attribute attrs, Pointer opts);
	int wattr_set(Window win, Attribute attrs, short pair, Pointer opts);
	int wattroff(Window win, int attrs);
	int wattron(Window win, int attrs);
	int wattrset(Window win, int attrs);
	int wbkgd(Window win, CHType ch);
	void wbkgdset(Window win, CHType ch);
	int wbkgrnd(Window win, CChar wch);
	void wbkgrndset(Window win, CChar wch);
	int wborder(Window win, CHType ls, CHType rs, CHType ts, CHType bs, CHType tl, CHType tr, CHType bl, CHType br);
	int wborder_set(Window win, CChar ls, CChar rs, CChar ts, CChar bs, CChar tl, CChar tr, CChar bl, CChar br);
	int wchgat(Window win, int n, Attribute attr, short pair, Pointer opts);
	int wclear(Window win);
	int wclrtobot(Window win);
	int wclrtoeol(Window win);
	int wcolor_set(Window win, short pair, Pointer opts);
	void wcursyncup(Window win);
	int wdelch(Window win);
	int wdeleteln(Window win);
	int wecho_wchar(Window win, CChar wch);
	int wechochar(Window win, CHType ch);
	boolean wenclose(Window win, int y, int x);
	int werase(Window win);
	int wget_wch(Window win, IntByReference wch);
	int wget_wstr(Window win, IntByReference wstr);
	int wgetbkgrnd(Window win, CChar wch);
	int wgetch(Window win);
	int wgetdelay(Window win);
	int wgetn_wstr(Window win, IntByReference wstr, int n);
	int wgetnstr(Window win, String str, int n);
	int wgetscrreg(Window win, IntByReference top, IntByReference bottom);
	int wgetstr(Window win, String str);
	int whline(Window win, CHType ch, int n);
	int whline_set(Window win, CChar wch, int n);
	int win_wch(Window win, CChar wcval);
	int win_wchnstr(Window win, CChar wchstr, int n);
	int win_wchstr(Window win, CChar wchstr);
	CHType winch(Pointer win);
	int winchnstr(Window win, CHType chstr, int n);
	int winchstr(Window win, CHType chstr);
	int winnstr(Window win, String str, int n);
	int winnwstr(Window win, char[] wstr, int n);
	int wins_nwstr(Window win, char[] wstr, int n);
	int wins_wch(Window win, CChar wch);
	int wins_wstr(Window win, char[] wstr);
	int winsch(Window win, CHType ch);
	int winsdelln(Window win, int n);
	int winsertln(Window win);
	int winsnstr(Window win, String str, int n);
	int winsstr(Window win, String str);
	int winstr(Window win, String str);
	int winwstr(Window win, char[] wstr);
	boolean wmouse_trafo(Window win, IntByReference pY, IntByReference pX, boolean to_screen);
	int wmove(Window win, int y, int x);
	int wnoutrefresh(Window win);
	int wprintw(Pointer win, String fmt, Pointer... pointers);
	int wredrawln(Window win, int beg_line, int num_lines);
	int wrefresh(Window win);
	int wresize(Window win, int lines, int columns);
	int wscanw(Pointer win, String fmt, Pointer... pointers);
	int wscrl(Window win, int n);
	int wsetscrreg(Window win, int top, int bot);
	int wstandend(Window win);
	int wstandout(Window win);
	void wsyncdown(Window win);
	void wsyncup(Window win);
	void wtimeout(Window win, int delay);
	int wtouchln(Window win, int y, int n, int changed);
	int wvline(Window win, CHType ch, int n);
	int wvline_set(Window win, CChar wch, int n);

	int A_NORMAL = 0;
	int A_ATTRIBUTES = NCURSES_BITS(~0, 0);
	int A_CHARTEXT = NCURSES_BITS(1, 0) - 1;
	int A_COLOR = NCURSES_BITS((1 << 8) - 1, 0);
	int A_STANDOUT = NCURSES_BITS(1, 8);
	int A_UNDERLINE = NCURSES_BITS(1, 9);
	int A_REVERSE = NCURSES_BITS(1, 10);
	int A_BLINK = NCURSES_BITS(1, 11);
	int A_DIM = NCURSES_BITS(1, 12);
	int A_BOLD = NCURSES_BITS(1, 13);
	int A_ALTCHARSET = NCURSES_BITS(1, 14);
	int A_INVIS = NCURSES_BITS(1, 15);
	int A_PROTECT = NCURSES_BITS(1, 16);
	int A_HORIZONTAL = NCURSES_BITS(1, 17);
	int A_LEFT = NCURSES_BITS(1, 18);
	int A_LOW = NCURSES_BITS(1, 19);
	int A_RIGHT = NCURSES_BITS(1, 20);
	int A_TOP = NCURSES_BITS(1, 21);
	int A_VERTICAL = NCURSES_BITS(1, 22);
	int A_ITALIC = NCURSES_BITS(1, 23);

	int NCURSES_ATTR_SHIFT = 8;

	private static int NCURSES_BITS(int mask, int shift) {
		return mask << (shift + NCURSES_ATTR_SHIFT);
	}
}
